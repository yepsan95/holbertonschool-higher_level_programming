DocTest for module '1-my_list'.

Creating a 'MyList' instance and passing it to type().

	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

Checking if my_list is a subclass of list.

	>>> isinstance(my_list, list)
	True

Printing the list.

	>>> print(my_list)
	[]

Creating a new instance of MyList and passing a list as argument, then printing it.

	>>> del my_list
	>>> my_list = MyList([1, 2, 3])
	>>> print(my_list)
	[1, 2, 3]

Creating a new instance of MyList and passing 'None' as argument.

	>>> del my_list
	>>> my_list = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

Creating a new instance of MyList and passing more than 1 list as argument.

	>>> my_list = MyList([1, 2], [3, 4])
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 2

Creating an ordered list and printing it.

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(4)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 2, 3, 4, 5]

Creating an unordered list and printing it.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append(2)
	>>> my_list.append(4)
	>>> my_list.append(5)
	>>> my_list.append(3)
	>>> my_list.append(1)
	>>> print(my_list)
	[2, 4, 5, 3, 1]

Replacing with indexing and printing.

	>>> my_list[2] = 4
	>>> print(my_list)
	[2, 4, 4, 3, 1]

Removing with 'remove()' method.

	>>> my_list.remove(4)
	>>> print(my_list)
	[2, 4, 3, 1]

Printing the instance method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> print(my_list.print_sorted)
	<bound method MyList.print_sorted of []>

Calling the instance method 'print_sorted()' with 1 argument.

	>>> my_list.print_sorted(1)
	Traceback (most recent call last):
	TypeError: print_sorted() takes 1 positional argument but 2 were given

Calling the instance method 'print_sorted()'.

	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(4)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

Deleting the list, creating a new empty list and calling the class method
'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

Passing the class method 'print_sorted()' to print().

	>>> print(my_list.print_sorted)
	<bound method MyList.print_sorted of []>

Passing 1 argument to class method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.print_sorted(1)
	Traceback (most recent call last):
	TypeError: print_sorted() takes 1 positional argument but 2 were given

Passing a list as an argument to the class instance and printing it.

	>>> del my_list
	>>> my_list = MyList([1, 2, 3])
	>>> print(my_list)
	[1, 2, 3]

Passing a 'None' as an argument to the class instance.

	>>> del my_list
	>>> my_list = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

Passing a list as an argument to the class instance.

	>>> my_list = MyList([1, 2], [3, 4])
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 2

Passing the class method 'print_sorted()' to type().

	>>> my_list = MyList()
	>>> type(my_list.print_sorted())
	[]
	<class 'NoneType'>

Creating a list of different types and calling the instance method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList(["Hola", 1, 3, "AdiÃ³s"])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'int' and 'str'

Creating an unordered list of negative numbers.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append(-2)
	>>> my_list.append(-4)
	>>> my_list.append(-5)
	>>> my_list.append(-3)
	>>> my_list.append(-1)
	>>> my_list.print_sorted()
	[-5, -4, -3, -2, -1]

Appending repeated elements to the list and calling the class method 'print_sorted()'.
 
	>>> my_list.append(-2)
	>>> my_list.append(-2)
	>>> my_list.append(-4)
	>>> my_list.append(-4)
	>>> my_list.print_sorted()
	[-5, -4, -4, -4, -3, -2, -2, -2, -1]

Creating a list of positive and negative integers (and 0) and calling the class method
'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append(-5)
	>>> my_list.append(5)
	>>> my_list.append(-4)
	>>> my_list.append(4)
	>>> my_list.append(0)
	>>> my_list.append(1)
	>>> my_list.append(-2)
	>>> my_list.print_sorted()
	[-5, -4, -2, 0, 1, 4, 5]

Creating a list of floats and calling the class method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append(1.5)
	>>> my_list.append(3.14)
	>>> my_list.append(5.5)
	>>> my_list.append(4.20)
	>>> my_list.append(8.8)
	>>> my_list.append(1.9)
	>>> my_list.append(0.1)
	>>> my_list.print_sorted()
	[0.1, 1.5, 1.9, 3.14, 4.2, 5.5, 8.8]

Creating a list of characters and calling the class method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append('f')
	>>> my_list.append('n')
	>>> my_list.append('b')
	>>> my_list.append('z')
	>>> my_list.append('a')
	>>> my_list.append('m')
	>>> my_list.append('g')
	>>> my_list.print_sorted()
	['a', 'b', 'f', 'g', 'm', 'n', 'z']

Creating a list of sets and calling the class method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append({5})
	>>> my_list.append({3})
	>>> my_list.append({1})
	>>> my_list.append({4})
	>>> my_list.append({2})
	>>> my_list.print_sorted()
	[{5}, {3}, {1}, {4}, {2}]

Creating a list of sets and calling the class method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append({5, 4, 3})
	>>> my_list.append({3, 2, 1})
	>>> my_list.append({1, 0, -1})
	>>> my_list.append({4, 3, 2})
	>>> my_list.append({2, 1, 0})
	>>> my_list.print_sorted()
	[{3, 4, 5}, {1, 2, 3}, {0, 1, -1}, {2, 3, 4}, {0, 1, 2}]

Creating a list of lists and calling the class method 'print_sorted()'.

	>>> del my_list
	>>> my_list = MyList()
	>>> my_list.append([5, 4, 3])
	>>> my_list.append([3, 2, 1])
	>>> my_list.append([1, 0, -1])
	>>> my_list.append([4, 3, 2])
	>>> my_list.append([2, 1, 0])
	>>> my_list.print_sorted()
	[[1, 0, -1], [2, 1, 0], [3, 2, 1], [4, 3, 2], [5, 4, 3]]
